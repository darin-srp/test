---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    env: "{{ .Values.environment }}"
  name: "{{ .Values.appName }}-deployment"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: "{{ .Values.appName }}"
      env: "{{ .Values.environment }}"
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      labels:
        api: fastapi
        app: "{{ .Values.appName }}"
        env: "{{ .Values.environment }}"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: pool
                    operator: In
                    values:
                      - cpu
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - "{{ .Values.appName }}"
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - env:
            - name: LOGGING_BACKEND
              value: google
            - name: APP_NAME
              value: dual-region-app
          envFrom:
            - secretRef:
                name: "vault-{{ .Values.appName }}-env-secret"
          image: ghcr.io/serendipityoneinc/dual-region-app:{{ .Values.imageTag }}
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 1
          name: "{{ .Values.appName }}"
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 10
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 10Mi
          volumeMounts:
            - mountPath: /sa-secret/
              name: sa-secret-volume
              readOnly: true
      imagePullSecrets:
        - name: ghcr-secret
      volumes:
        - name: sa-secret-volume
          secret:
            secretName: sa-secret
